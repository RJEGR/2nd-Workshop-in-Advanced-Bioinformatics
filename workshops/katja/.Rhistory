color = "white",size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_size = 16, base_family = "GillSans")
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_label_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5),
color = "white",size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_size = 16, base_family = "GillSans")
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_label_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5),
color = "white",size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group)
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_label_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5),
color = "white", size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_size = 16, base_family = "GillSans")
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_label_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5),
color = "white", size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_size = 16, base_family = "GillSans")
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_label_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5),
color = "white", size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group)
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5), size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group)
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5), size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
# scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_size = 16, base_family = "GillSans")
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5), size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
# scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_family = "GillSans")
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5, hjust = 0.5),
size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
# scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_family = "GillSans")
?position_stack
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5, hjust = 0.5),
size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
# scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_family = "GillSans") -> p2
ggsave(p1, filename = "G4PromFinder_2.png", path = dir,
width = 10, height = 14)
ggsave(p2, filename = "G4PromFinder_2.png", path = dir,
width = 10, height = 14)
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5, hjust = 0.5),
size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
# scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_family = "GillSans") -> p2
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5, hjust = 0.5),
size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_family = "GillSans") -> p2
ggsave(p2, filename = "G4PromFinder_2.png", path = dir,
width = 10, height = 14)
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5, hjust = 0.5),
size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_family = "GillSans") -> p2
rbind(df1_summ, df2_summ) %>%
group_by(Strand, group) %>%
mutate(Rank = rank(n)) %>%
mutate(id = forcats::fct_reorder(id, Rank)) %>%
group_by(id, group) %>%
mutate(pct = round(raf(n), digits = 2)) %>%
# mutate(lPos = cumsum(pct) - pct/2) %>%
ggplot(aes(x = id, y = n)) +
geom_col(aes(fill = Strand)) +
ggrepel::geom_text_repel(aes(label= paste0(pct, "%")),
position=position_stack(vjust=0.5, reverse = T),
size = 3) +
# geom_bar(aes(fill = group), position="dodge", stat="identity") +
labs(y = "# Predictions with G4PromFinder", x = "") +
coord_flip() +
facet_grid(~ group) +
scale_fill_manual("", values = c("#3182bd", "#de2d26")) +
theme_bw(base_family = "GillSans") -> p2
ggsave(p2, filename = "G4PromFinder_2.png", path = dir,
width = 10, height = 14)
ggsave(p2, filename = "G4PromFinder_2.png", path = dir,
width = 10, height = 12)
# ==============
## Checking and Load packages ----
# ==============
.cran_packages <- c("tidyverse", "wTO", "CoDiNA")
.bioc_packages <- c("DESeq2", "biomaRt", "TopGo", "Rgraphviz", "wTO")
.inst <- .cran_packages %in% installed.packages()
if(any(!.inst)) {
install.packages(.cran_packages[!.inst], dep=TRUE, repos='http://cran.us.r-project.org')
}
.inst <- .bioc_packages %in% installed.packages()
if(any(!.inst)) {
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(.bioc_packages[!.inst], ask = F)
}
.bioc_packages <- c("DESeq2", "biomaRt", "topGO", "Rgraphviz", "wTO")
# Load packages into session, and print package version
sapply(c(.cran_packages, .bioc_packages), require, character.only = TRUE)
.bioc_packages <- c("DESeq2", "biomaRt", "topGO", "Rgraphviz", "wTO")
.bioc_packages <- c("DESeq2", "biomaRt", "topGO", "Rgraphviz", "wTO")
.inst <- .cran_packages %in% installed.packages()
if(any(!.inst)) {
install.packages(.cran_packages[!.inst], dep=TRUE, repos='http://cran.us.r-project.org')
}
.inst <- .bioc_packages %in% installed.packages()
if(any(!.inst)) {
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(.bioc_packages[!.inst], ask = F)
}
# Load packages into session, and print package version
sapply(c(.cran_packages, .bioc_packages), require, character.only = TRUE)
#
setwd("~/Documents/GitHub/2nd-Workshop-in-Advanced-Bioinformatics/")
readcounts=read.table("Tutorial_macaques_readcounts.txt", header=TRUE, row.names=1, sep="\t", stringsAsFactors=FALSE)
#
setwd("~/Documents/GitHub/2nd-Workshop-in-Advanced-Bioinformatics/workshops/katja/")
readcounts=read.table("Tutorial_macaques_readcounts.txt", header=TRUE, row.names=1, sep="\t", stringsAsFactors=FALSE)
dim(readcounts)
head(coldata)
coldata=read.table("Tutorial_macaques_ids.txt", header=TRUE, row.names=1, sep="\t", stringsAsFactors=FALSE)
dim(coldata)
coldata$condition = factor(coldata$condition)
dds=DESeqDataSetFromMatrix(countData = readcounts, colData = coldata, design = ~ condition)
dds
keep = rowSums(counts(dds)) >= 10
dds = dds[keep,]
dds
dds$condition = factor(dds$condition, levels = c("NC","LPS"))
dds = DESeq(dds)
result = results(dds)
result
mcols(result)$description
resultLFC = lfcShrink(dds, coef="condition_LPS_vs_NC", type="normal")
summary(result)
resultOrdered = result[order(result$pvalue),]
sum(result$padj < 0.1, na.rm=TRUE)
sum(result$padj < 0.05, na.rm=TRUE)
result005 = results(dds, alpha=0.05)
summary(result005)
plotMA(result, ylim=c(-2,2))
plotCounts(dds, gene=which.min(result$padj), intgroup="condition")
count_edgeR_obj
count_edgeR_obj=DGEList(counts=readcounts, group=coldata$condition)
.bioc_packages <- c("edgeR","DESeq2", "biomaRt", "topGO", "Rgraphviz", "wTO")
.inst <- .cran_packages %in% installed.packages()
if(any(!.inst)) {
install.packages(.cran_packages[!.inst], dep=TRUE, repos='http://cran.us.r-project.org')
}
.inst <- .bioc_packages %in% installed.packages()
if(any(!.inst)) {
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(.bioc_packages[!.inst], ask = F)
}
library(edgeR)
count_edgeR_obj=DGEList(counts=readcounts, group=coldata$condition)
count_edgeR_obj
count_edgeR_obj=estimateCommonDisp(count_edgeR_obj)
count_edgeR_obj=estimateTagwiseDisp(count_edgeR_obj)
edgeR_DEgenes=exactTest(count_edgeR_obj)
edgeR_DEgenes
topTags(edgeR_DEgenes, sort.by = "logFC")
edgeR_DEgenesTable=edgeR_DEgenes$table
head(edgeR_DEgenesTable)
signedgeR_DEgenes=edgeR_DEgenesTable[edgeR_DEgenesTable[,3]<0.05,]
edgeROrdered <- edgeR_DEgenesTable[order(edgeR_DEgenesTable$PValue),]
head(edgeROrdered)
head(edgeROrdered)
sum(edgeROrdered$PValue < 0.05, na.rm=TRUE)
sum(resultOrdered$padj < 0.05, na.rm=TRUE)
head(resultOrdered)
dim(signedgeR_DEgenes)
sum(edgeROrdered$PValue < 0.05, na.rm=TRUE)
sum(resultOrdered$padj < 0.05, na.rm=TRUE)
dim(result005)
sum(edgeROrdered$PValue < 0.05, na.rm=TRUE)
dim(signedgeR_DEgenes)
head(signedgeR_DEgenes)
head(result005)
dim(result005)
dim(signedgeR_DEgenes)
dim(result005)
summary(result005)
result005 = results(dds, alpha=0.05)
summary(result005)
dim(signedgeR_DEgenes)
sum(resultOrdered$padj < 0.05, na.rm=TRUE)
dim(resultOrdered[resultOrdered$padj < 0.05])
dim(resultOrdered[resultOrdered$padj < 0.05,])
resultOrdered[resultOrdered$padj < 0.05]
resultOrdered$padj < 0.05
resultOrdered[resultOrdered$padj < 0.05]
dim(resultOrdered[resultOrdered$padj < 0.05, ])
dim(resultOrdered[,resultOrdered$padj < 0.05 ])
head(resultOrdered)
dim(as.data.frame(resultOrdered)[,resultOrdered$padj < 0.05 ])
dim(as.data.frame(resultOrdered)[resultOrdered$padj < 0.05, ])
sum(resultOrdered$padj < 0.05, na.rm=TRUE)
sum(edgeROrdered$PValue < 0.05, na.rm=TRUE)
sum(resultOrdered$padj < 0.05, na.rm=TRUE)
dim(signedgeR_DEgenes)
dim(as.data.frame(resultOrdered)[resultOrdered$padj < 0.05, ])
head(as.data.frame(resultOrdered)[resultOrdered$padj < 0.05, ])
sum(resultOrdered$padj < 0.05, na.rm=TRUE)
dim(signedgeR_DEgenes)
sum(edgeROrdered$PValue < 0.05, na.rm=TRUE)
dim(edgeROrdered)
head(result005)
dim(result005)
head(as.data.frame(result005)[result005$padj < 0.05, ])
dim(as.data.frame(result005)[result005$padj < 0.05, ])
sum(resultOrdered$padj < 0.05, na.rm=TRUE)
dim(as.data.frame(resultOrdered)[resultOrdered$padj < 0.05, ])
coldata$rank = as.factor(coldata$rank)
dds_interact=DESeqDataSetFromMatrix(countData = readcounts,
colData = coldata,
design = ~ condition + rank + condition:rank)
dds_interact
dds_interact = DESeq(dds_interact)
require(wTO)
NC = readcounts[,coldata$condition == 'NC']
dim(NC)
dim(readcounts)
NC = NC[rowSums(NC)> 10,]
dim(NC)
LPS = readcounts[,coldata$condition == 'LPS']
dim(LPS)
LPS = LPS[rowSums(LPS)> 10,]
dim(LPS)
summary(result)
DE_genes = subset(row.names(result), result$padj<0.01)
NC = subset(NC, row.names(NC) %in% DE_genes)
LPS = subset(LPS, row.names(LPS) %in% DE_genes)
TFs = read.table("TFs.txt", header=TRUE, sep="\t", stringsAsFactors=FALSE)
dim(TFs)
head(TFs)
TFs = TFs[,1]
length(TFs)
head(TFs)
# retrive gene annot via BiomaRt
listMarts()
ensembl=useMart("ensembl")
sum(edgeROrdered$PValue < 0.05, na.rm=TRUE)
sum(resultOrdered$padj < 0.05, na.rm=TRUE)
mart = useDataset("mmulatta_gene_ensembl", useMart("ensembl"))
expressedGenes=row.names(result)
listAttributes(mart)
dim(GeneSymbols)
GeneSymbols = getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", 'external_gene_name'),values=expressedGenes,mart= mart)
dim(GeneSymbols)
head(GeneSymbols)
LPS$ensembl_gene_id = row.names(LPS)
LPS = join(LPS, GeneSymbols, type = 'inner', match = 'first')
head(LPS)
library(plyr)
LPS$ensembl_gene_id = row.names(LPS)
LPS = join(LPS, GeneSymbols, type = 'inner', match = 'first')
head(LPS)
LPS = LPS[!duplicated(LPS$external_gene_name), ]
row.names(LPS) = LPS$external_gene_name
head(LPS)
LPS = LPS[, -c(1,27)]
head(LPS)
NC$ensembl_gene_id = row.names(NC)
NC = join(NC, GeneSymbols, type = 'inner', match = 'first')
NC = NC[!duplicated(NC$external_gene_name), ]
row.names(NC) = NC$external_gene_name
head(NC)
NC = NC[, -c(1,27)]
head(NC)
network_NC = wTO.Complete(n = 10, k = 5,  Data = NC,
method_resampling = 'Bootstrap',
Overlap = TFs, method = 's', plot = F)
?wTO.Complete
network_NC
network_NC = network_NC$wTO
head(network_NC)
network_NC$wTO = ifelse(network_NC$Padj_sig<0.05, network_NC$wTO_sign, 0 )
head(network_NC)
network_NC = network_NC[,c(1:2,9)] %>% as.data.frame()
head(network_NC)
network_LPS = wTO.Complete(n = 10,  Data = LPS,
method_resampling = 'Bootstrap',
Overlap = TFs, method = 's', plot = F)
head(LPS)
plot(network_LPS)
network_LPS = wTO.Complete(n = 10,  Data = LPS,
method_resampling = 'Bootstrap',
Overlap = TFs, method = 's', plot = T)
# From the output table, remove everything but the info on nodes and the wTO between two nodes.
require(CoDiNA)
network_NC = network_NC[,c(1:2,9)] %>% as.data.frame()
head(network_NC)
head(network_NC)
network_LPS = wTO.Complete(n = 10,  Data = LPS,
method_resampling = 'Bootstrap',
Overlap = TFs, method = 's', plot = F)
network_LPS
network_NC$Node.1 = as.character(network_NC$Node.1)
network_NC$Node.2 = as.character(network_NC$Node.2)
Diff_LPS_NC = MakeDiffNet(Data = list(network_NC, network_LPS),
Code = c('NC', 'LPS'))
head(network_NC)
network_LPS$Node.1 = as.character(network_LPS$Node.1)
network_LPS$Node.2 = as.character(network_LPS$Node.2)
Diff_LPS_NC = MakeDiffNet(Data = list(network_NC, network_LPS),
Code = c('NC', 'LPS'))
network_NC
network_LPS
network_LPS =network_LPS$wTO
network_LPS$wTO = ifelse(network_LPS$Padj_sig <0.05, network_LPS$wTO_sign, 0 )
network_LPS = network_LPS[,c(1,2,9)] %>% as.data.frame()
head(network_LPS)
network_NC$Node.1 = as.character(network_NC$Node.1)
network_NC$Node.2 = as.character(network_NC$Node.2)
Diff_LPS_NC = MakeDiffNet(Data = list(network_NC, network_LPS),
Code = c('NC', 'LPS'))
Diff_LPS_NC %>% view()
Diff_LPS_NC_clean = subset(Diff_LPS_NC,
Diff_LPS_NC$Score_Phi_tilde/Diff_LPS_NC$Score_internal > 1)
Diff_LPS_NC_clean
DiffNodes = ClusterNodes(Diff_LPS_NC_clean,
cutoff.external = 0,
cutoff.internal = 1)
DiffNodes
barplot(table(DiffNodes$Phi_tilde))
barplot(table(DiffNodes$Phi_tilde))
dev.off()
barplot(table(DiffNodes$Phi_tilde))
plot(Diff_LPS_NC_clean, layout = 'layout_with_drl')
